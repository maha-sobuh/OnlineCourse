// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project.Models;

#nullable disable

namespace project.Migrations
{
    [DbContext(typeof(OnlineCoursesContext))]
    partial class OnlineCoursesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("project.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CousrePrice")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "C++",
                            CousrePrice = 150
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "front end ",
                            CousrePrice = 60
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "Math",
                            CousrePrice = 80
                        },
                        new
                        {
                            CourseId = 4,
                            CourseName = "Web Programming",
                            CousrePrice = 300
                        },
                        new
                        {
                            CourseId = 5,
                            CourseName = "Embeded System",
                            CousrePrice = 190
                        },
                        new
                        {
                            CourseId = 6,
                            CourseName = "Java",
                            CousrePrice = 160
                        },
                        new
                        {
                            CourseId = 7,
                            CourseName = "Network Programming",
                            CousrePrice = 90
                        },
                        new
                        {
                            CourseId = 8,
                            CourseName = "Lenux",
                            CousrePrice = 90
                        },
                        new
                        {
                            CourseId = 9,
                            CourseName = "Python",
                            CousrePrice = 130
                        },
                        new
                        {
                            CourseId = 10,
                            CourseName = "Project Managment",
                            CousrePrice = 110
                        });
                });

            modelBuilder.Entity("project.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<double>("Average")
                        .HasColumnType("float");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("CourseId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Average = 92.0,
                            CourseId = 1,
                            Name = "maha",
                            Password = "123"
                        },
                        new
                        {
                            StudentId = 2,
                            Average = 99.0,
                            CourseId = 1,
                            Name = "mohammed",
                            Password = "212"
                        },
                        new
                        {
                            StudentId = 3,
                            Average = 97.0,
                            CourseId = 6,
                            Name = "shahd",
                            Password = "262"
                        },
                        new
                        {
                            StudentId = 4,
                            Average = 89.0,
                            CourseId = 4,
                            Name = "suha",
                            Password = "762"
                        },
                        new
                        {
                            StudentId = 5,
                            Average = 97.0,
                            CourseId = 7,
                            Name = "Rawan",
                            Password = "292"
                        },
                        new
                        {
                            StudentId = 6,
                            Average = 74.0,
                            CourseId = 2,
                            Name = "Noor",
                            Password = "202"
                        },
                        new
                        {
                            StudentId = 7,
                            Average = 97.0,
                            CourseId = 3,
                            Name = "Raghad",
                            Password = "202"
                        },
                        new
                        {
                            StudentId = 8,
                            Average = 67.0,
                            CourseId = 3,
                            Name = "bushra",
                            Password = "162"
                        },
                        new
                        {
                            StudentId = 9,
                            Average = 88.0,
                            CourseId = 3,
                            Name = "misk",
                            Password = "200"
                        },
                        new
                        {
                            StudentId = 10,
                            Average = 57.0,
                            CourseId = 2,
                            Name = "yazan",
                            Password = "772"
                        },
                        new
                        {
                            StudentId = 11,
                            Average = 91.0,
                            CourseId = 2,
                            Name = "yara",
                            Password = "777"
                        });
                });

            modelBuilder.Entity("project.Models.Student", b =>
                {
                    b.HasOne("project.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });
#pragma warning restore 612, 618
        }
    }
}
